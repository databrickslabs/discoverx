name: CI pipeline

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - 'v*' # this tag type is used for release pipelines

jobs:
  ci-pipeline:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN:  ${{ secrets.DATABRICKS_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies
          cache-dependency-path: setup.py

      - name: Install pip
        run: |
          python -m pip install --upgrade pip

      - name: Install dependencies and project in dev mode
        run: |
          pip install -e ".[local,test]"

      - name: Black format check
        run: |
          echo "Check black formatting"
          black discoverx --check

      - name: Pylint check
        continue-on-error: true #for now, just inform
        run: |
          echo "Run pylint"
          pylint discoverx

      - name: Run tests with coverage
        run: |
          coverage run -m pytest tests/unit

      - name: Print coverage report
        run: |
          coverage report

      - name: Publish test coverage
        continue-on-error: true #this will first work once repo is public
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          flags: unittests
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true


      # TODO: Find an environment with UC enabled to run integration tests
      # - name: Workflow deployment (assets only upload)
      #   run: |
      #     dbx deploy discoverx-sample-etl --assets-only

      # - name: Run the workflow in a jobless fashion
      #   run: |
      #     dbx launch discoverx-sample-etl --from-assets --trace


